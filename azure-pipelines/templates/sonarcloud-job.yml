parameters:
  - name: imageName
    displayName: Image Name
    type: string
    values:
      - 'windows-2019'
      - 'ubuntu-18.04'
      - 'macOS-10.15'
  
  - name: jobName
    displayName: Job Name
    type: string
    default: sonarCloud

  - name: jobDisplayName
    displayName: Job Display Name
    type: string
    default: sonarCloud

  - name: vcpkg_key_cache
    displayName: CACHE_VCPKG_KEY
    type: string
    default: ''
  
  - name: triplet
    displayName: triplet
    type: string   
  
  - name: arch
    displayName: arch
    type: string
    default: ''
    
  - name: build_type
    displayName: Build Type
    type: string

  - name: cmake_ignore_path
    displayName: CMAKE_IGNORE_PATH
    type: string
    default: ''

  - name: vcpkg_cmake
    displayName: VCPKG_CMAKE
    type: string
    default: $(VCPKG_CMAKE)
  
  - name: cmake_args
    displayName: CMAKE_ARGS
    type: string
    default: $(CMAKE_ARGS)

  - name: sonar_wrapper_url
    displayName: SONAR_WRAPPER_URL
    type: string
    values:
      - 'https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip'
      - 'https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip'
      - 'https://sonarcloud.io/static/cpp/build-wrapper-macosx-x86.zip'

  - name: build_wrapper
    displayName: BUILD_WRAPPER
    type: string
    values:
     - 'build-wrapper-win-x86\build-wrapper-win-x86-64.exe'
     - 'build-wrapper-linux-x86/build-wrapper-linux-x86-64'
     - 'build-wrapper-macosx-x86/build-wrapper-macosx-x86'

  - name: build_wrapper_path
    displayName: Build Wrapper Path
    type: string
    values:
      - build/build-wrapper-win-x86
      - build/build-wrapper-linux-x86-64
      - build/build-wrapper-macosx-x86

  - name: test
    displayName: Run Test?
    type: boolean
    default: true

  - name: publish_timeout
    displayName: PUBLISH_TIMEOUT
    type: number
    default: 600

jobs:
- job: ${{ parameters.jobName }}
  displayName: ${{ parameters.jobDisplayName }}
  pool:
    vmImage: ${{ parameters.imageName }}
  
  steps:
  - template: 'vcpkg-cache-step.yml'
    parameters:
      vcpkg_key_cache: ${{ parameters.vcpkg_key_cache }}
      triplet: ${{ parameters.triplet }}
  
  - task: Cache@2
    inputs:
      key: '"${{ parameters.sonar_wrapper_url }}" | "$(Agent.OS)"'
      path: "${{ parameters.build_wrapper_path }}"
      cacheHitVar: CACHED_BUILD_WRAPPER
    displayName: "(cache) build-wrapper"
  - bash: |
      mkdir -p build && cd build
      curl ${{ parameters.sonar_wrapper_url }} --output build-wrapper.zip
      unzip build-wrapper.zip
    displayName: build-wrapper
    condition: ne(variables.CACHED_BUILD_WRAPPER, 'true')
  
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'sonarCloud'
      organization: 'raffaello-github'
      scannerMode: 'CLI'
      configMode: 'file'        
    displayName: Prepare sonarCloud
  
  - template: 'cmake-gen-build-steps.yml'
    parameters:
      build_type: ${{ parameters.build_type }}
      triplet: ${{ parameters.triplet }}
      vcpkg_cmake: ${{ parameters.vcpkg_cmake }}
      cmake_args: ${{ parameters.cmake_args }}
      cmake_ignore_path: ${{ parameters.cmake_ignore_path }}
      arch: ${{ parameters.arch }}
      build_wrapper: "${{ parameters.build_wrapper }} --out-dir bw-output"
  
  - ${{ if eq(parameters.test, true) }}:  
    - script: ctest -C ${{ parameters.build_type }} -V
      displayName: cmake test (ctest)
      workingDirectory: build
  
  - task: SonarCloudAnalyze@1
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: ${{ parameters.publish_timeout }}
