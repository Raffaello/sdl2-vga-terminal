parameters:
  - name: build_type
    displayName: Build Type
    type: string
  
  - name: triplet
    displayName: triplet
    type: string

  - name: vcpkg_cmake
    displayName: VCPKG_CMAKE
    type: string
    default: $(VCPKG_CMAKE)
  
  - name: cmake_args
    displayName: CMAKE_ARGS
    type: string
    default: $(CMAKE_ARGS)
  
  - name: cmake_ignore_path
    displayName: CMAKE_IGNORE_PATH
    type: string
    default: ''

  - name: arch
    displayName: arch
    type: string
    default: ''
    
  - name: build_wrapper
    type: string
    default: ''


steps:
- bash: |
    mkdir -p build && cd build
    cmake -DVCPKG_TARGET_TRIPLET=${{ parameters.triplet }} -DCMAKE_BUILD_TYPE=${{ parameters.build_type }}  -DCMAKE_TOOLCHAIN_FILE=${{ parameters.vcpkg_cmake }} ${{ parameters.cmake_args }} ..
  displayName: cmake generator (UNIX)
  condition: ne(variables['Agent.OS'], 'Windows_NT')
- bash: ${{ parameters.build_wrapper }} cmake --build .
  displayName: cmake build (UNIX)
  workingDirectory: build
  condition: ne(variables['Agent.OS'], 'Windows_NT')

- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ parameters.arch }}.bat"
    mkdir build & cd build
    cmake -DVCPKG_TARGET_TRIPLET=${{ parameters.triplet }} -DCMAKE_IGNORE_PATH="${{ parameters.cmake_ignore_path }}" -G"Ninja" -DCMAKE_BUILD_TYPE=${{ parameters.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ parameters.vcpkg_cmake }} ${{ parameters.cmake_args }} ..
  displayName: 'CMake generator (WIN)'
  condition: eq(variables['Agent.OS'], 'Windows_NT')
- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ parameters.arch }}.bat"
    ${{ parameters.build_wrapper }} cmake --build .
  workingDirectory: build
  displayName: cmake build (WIN)
  condition: eq(variables['Agent.OS'], 'Windows_NT')
