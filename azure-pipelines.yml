# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  CONFIGURATION: 'Debug'

stages:
- stage: CI 
  jobs:
    - job: Linux
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - bash: echo ${PWD}
        displayName: "current dir"
      - script: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg install sdl2 sdl2-image gtest
          ./vcpkg integrate install
          cd ..
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${CONFIGURATION} -DCMAKE_TOOLCHAIN_FILE=/home/vsts/work/1/s/vcpkg/scripts/buildsystems/vcpkg.cmake ..
          cmake --build .
        displayName: cmake build
      #- script: cd build && ctest -V
      #  displayName: cmake test (ctest)
      
    - job: Windows
      pool:
        vmImage: 'windows-latest'
      steps:
      - script: echo %CD%
        displayName: "check curent dir"
      - script: |
            call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            git clone https://github.com/Microsoft/vcpkg.git
            cd vcpkg
            bootstrap-vcpkg.bat
            vcpkg install sdl2 sdl2-image gtest --triplet x64-windows
            vcpkg integrate install
            cd ..
            mkdir build
            cd build
            cmake -DCMAKE_BUILD_TYPE=%CONFIGURATION% -A "x64" -DCMAKE_TOOLCHAIN_FILE=D:\a\1\s\vcpkg\scripts\buildsystems\vcpkg.cmake ..
            cmake --build .
        displayName: cmake build
      - script: |
            call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            cd build 
            ctest -V
        displayName: cmake test (ctest)      
