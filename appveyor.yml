branches:
  only:
    - master

skip_branch_with_pr: false

image:
    - Visual Studio 2019
    - Ubuntu

platform:
  - x86
  - x64

configuration:
  - Debug
  - Release

environment:
    VCPKG_SCRIPT: scripts/buildsystems/vcpkg.cmake

matrix:
    allow_failures:
        - platform: x86
          image: Ubuntu

for:
-
    matrix:
        only:
            - image: Ubuntu
    cache:
        - /home/appveyor/vcpkg/vcpkg
        - /home/appveyor/vcpkg/packages
        - /home/appveyor/vcpkg/installed


skip_commits:
  files:
    - .github/*
    - .gitignore
    - README.md
    - azure-pipelines.yml

init:
    - sh: if [ $PLATFORM = "x86" ]; then exit 1; fi

install:
    - cmd: if "%PLATFORM%" == "x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
    - cmd: if "%PLATFORM%" == "x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
    - ninja --version

before_build:
    - cmd: cd C:\tools\vcpkg
    - sh : cd /home/appveyor/vcpkg
    - git pull
    - cmd: .\bootstrap-vcpkg.bat
    - sh : ./bootstrap-vcpkg.sh
    - cmd: vcpkg install sdl2 sdl2-image gtest --triplet %PLATFORM%-windows    
    - sh : vcpkg install sdl2 sdl2-image gtest --triplet $PLATFORM-linux
    - vcpkg integrate install
    - cmd: cd %APPVEYOR_BUILD_FOLDER%
    - sh : cd $APPVEYOR_BUILD_FOLDER

cache:
    - C:\tools\vcpkg\vcpkg.exe
    - C:\tools\vcpkg\packages
    - C:\tools\vcpkg\installed

build_script:
    - mkdir out
    - cd out
    - cmd: cmake -G "Ninja" -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DWITH_SDL2_STATIC=OFF -DBUILD_SNAPSHOT=OFF -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/%VCPKG_SCRIPT% ..
    - sh : cmake -DCMAKE_BUILD_TYPE=$CONFIGURATION -DWITH_SDL2_STATIC=ON -DBUILD_SNAPSHOT=OFF -DCMAKE_TOOLCHAIN_FILE=/home/appveyor/vcpkg/scripts/buildsystems/vcpkg.cmake ..

test_script:
    - cmake --build .
    - cmd: ctest -V  # ubuntu image is headless, no video driver.
    - cmd: cmake --build . --target install # skip linux, as the current path might not be ok, is more package related.
    - cmake --build . --target package 

artifacts:
    - path: "out/*.zip"
      type: zip
      name: cpack-artifact

deploy:
  release: appveyor-test-v$(appveyor_build_version)
  description: 'Release description'
  provider: GitHub
  #auth_token:
  #  secure: <your encrypted token> # your encrypted token from GitHub
  artifact: /.*\.zip/            # upload all NuGet packages to release assets
  draft: true
  prerelease: false
  on:
    #branch: master                 # release from master branch only
    APPVEYOR_REPO_TAG: true        # deploy on tag push only
